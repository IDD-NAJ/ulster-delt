openapi: 3.0.0
info:
  title: Ulster Delt Investment API
  version: 1.0.0
  description: API documentation for Ulster Delt Investment platform

servers:
  - url: http://localhost:3000/api
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [user, admin]
        isEmailVerified:
          type: boolean
        twoFactorEnabled:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Investment:
      type: object
      properties:
        id:
          type: string
        user:
          type: string
        type:
          type: string
          enum: [stocks, bonds, mutual_funds, etf, crypto]
        name:
          type: string
        symbol:
          type: string
        amount:
          type: number
          minimum: 0
        purchasePrice:
          type: number
          minimum: 0
        currentPrice:
          type: number
          minimum: 0
        purchaseDate:
          type: string
          format: date-time
        status:
          type: string
          enum: [active, sold, pending]
        notes:
          type: string
        performance:
          type: object
          properties:
            daily:
              type: number
            weekly:
              type: number
            monthly:
              type: number
            yearly:
              type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Transaction:
      type: object
      properties:
        id:
          type: string
        user:
          type: string
        investment:
          type: string
        type:
          type: string
          enum: [buy, sell, dividend, interest, fee]
        amount:
          type: number
          minimum: 0
        price:
          type: number
          minimum: 0
        totalValue:
          type: number
          minimum: 0
        date:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, completed, failed, cancelled]
        notes:
          type: string
        metadata:
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /investments:
    post:
      tags:
        - Investments
      summary: Create new investment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - name
                - symbol
                - amount
                - purchasePrice
                - currentPrice
              properties:
                type:
                  type: string
                  enum: [stocks, bonds, mutual_funds, etf, crypto]
                name:
                  type: string
                symbol:
                  type: string
                amount:
                  type: number
                  minimum: 0
                purchasePrice:
                  type: number
                  minimum: 0
                currentPrice:
                  type: number
                  minimum: 0
                notes:
                  type: string
      responses:
        '201':
          description: Investment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  investment:
                    $ref: '#/components/schemas/Investment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - Investments
      summary: Get all investments for current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of investments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Investment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /investments/{id}:
    get:
      tags:
        - Investments
      summary: Get investment by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Investment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Investment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Investments
      summary: Update investment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                amount:
                  type: number
                  minimum: 0
                currentPrice:
                  type: number
                  minimum: 0
                notes:
                  type: string
      responses:
        '200':
          description: Investment updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  investment:
                    $ref: '#/components/schemas/Investment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Investment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Investments
      summary: Delete investment
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Investment deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  investment:
                    $ref: '#/components/schemas/Investment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Investment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions:
    post:
      tags:
        - Transactions
      summary: Create new transaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - investmentId
                - type
                - amount
                - price
              properties:
                investmentId:
                  type: string
                type:
                  type: string
                  enum: [buy, sell, dividend, interest, fee]
                amount:
                  type: number
                  minimum: 0
                price:
                  type: number
                  minimum: 0
                notes:
                  type: string
                metadata:
                  type: object
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  transaction:
                    $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Investment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - Transactions
      summary: Get all transactions for current user
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions/{id}:
    get:
      tags:
        - Transactions
      summary: Get transaction by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      tags:
        - Transactions
      summary: Update transaction status
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [pending, completed, failed, cancelled]
      responses:
        '200':
          description: Transaction status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  transaction:
                    $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 