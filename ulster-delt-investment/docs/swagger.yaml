openapi: 3.0.0
info:
  title: Ulster Delt Investment API
  version: 1.0.0
  description: API documentation for Ulster Delt Investment banking platform

servers:
  - url: http://localhost:3000
    description: Development server

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: The user's unique identifier
        email:
          type: string
          format: email
          description: The user's email address
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        role:
          type: string
          enum: [user, admin]
          description: The user's role
        createdAt:
          type: string
          format: date-time
          description: The date the user was created
        updatedAt:
          type: string
          format: date-time
          description: The date the user was last updated

    Account:
      type: object
      properties:
        _id:
          type: string
          description: The account's unique identifier
        userId:
          type: string
          description: The ID of the user who owns this account
        accountNumber:
          type: string
          description: The account number
        balance:
          type: number
          description: The current balance
        currency:
          type: string
          description: The account currency
        type:
          type: string
          enum: [savings, checking, investment]
          description: The type of account
        status:
          type: string
          enum: [active, inactive, frozen]
          description: The account status
        createdAt:
          type: string
          format: date-time
          description: The date the account was created
        updatedAt:
          type: string
          format: date-time
          description: The date the account was last updated

    Transaction:
      type: object
      properties:
        _id:
          type: string
          description: The transaction's unique identifier
        fromAccount:
          type: string
          description: The source account ID
        toAccount:
          type: string
          description: The destination account ID
        amount:
          type: number
          description: The transaction amount
        currency:
          type: string
          description: The transaction currency
        type:
          type: string
          enum: [transfer, deposit, withdrawal]
          description: The type of transaction
        status:
          type: string
          enum: [pending, completed, failed]
          description: The transaction status
        createdAt:
          type: string
          format: date-time
          description: The date the transaction was created
        updatedAt:
          type: string
          format: date-time
          description: The date the transaction was last updated

    Investment:
      type: object
      properties:
        _id:
          type: string
          description: The investment's unique identifier
        userId:
          type: string
          description: The ID of the user who owns this investment
        accountId:
          type: string
          description: The ID of the account associated with this investment
        type:
          type: string
          enum: [stocks, bonds, mutual_funds, etf]
          description: The type of investment
        amount:
          type: number
          description: The investment amount
        currency:
          type: string
          description: The investment currency
        status:
          type: string
          enum: [active, sold, pending]
          description: The investment status
        createdAt:
          type: string
          format: date-time
          description: The date the investment was created
        updatedAt:
          type: string
          format: date-time
          description: The date the investment was last updated

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        '201':
          description: User successfully registered
        '400':
          description: Invalid input data
        '409':
          description: Email already exists

  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials

  /api/auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Password reset email sent
        '404':
          description: User not found

  /api/auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
              properties:
                token:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid token

  /api/accounts:
    get:
      tags:
        - Accounts
      summary: Get user's accounts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of user's accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized

    post:
      tags:
        - Accounts
      summary: Create a new account
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - currency
              properties:
                type:
                  type: string
                  enum: [savings, checking, investment]
                currency:
                  type: string
      responses:
        '201':
          description: Account created successfully
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized

  /api/accounts/{accountId}:
    get:
      tags:
        - Accounts
      summary: Get account details
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
        '404':
          description: Account not found

    put:
      tags:
        - Accounts
      summary: Update account
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [active, inactive, frozen]
      responses:
        '200':
          description: Account updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Account not found

  /api/transactions:
    get:
      tags:
        - Transactions
      summary: Get user's transactions
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: accountId
          schema:
            type: string
          description: Filter transactions by account ID
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Filter transactions from this date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: Filter transactions until this date
      responses:
        '200':
          description: List of user's transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized

    post:
      tags:
        - Transactions
      summary: Create a new transaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fromAccount
                - toAccount
                - amount
                - currency
              properties:
                fromAccount:
                  type: string
                toAccount:
                  type: string
                amount:
                  type: number
                currency:
                  type: string
      responses:
        '201':
          description: Transaction created successfully
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized
        '403':
          description: Insufficient funds

  /api/investments:
    get:
      tags:
        - Investments
      summary: Get user's investments
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [stocks, bonds, mutual_funds, etf]
          description: Filter investments by type
      responses:
        '200':
          description: List of user's investments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Investment'
        '401':
          description: Unauthorized

    post:
      tags:
        - Investments
      summary: Create a new investment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accountId
                - type
                - amount
                - currency
              properties:
                accountId:
                  type: string
                type:
                  type: string
                  enum: [stocks, bonds, mutual_funds, etf]
                amount:
                  type: number
                currency:
                  type: string
      responses:
        '201':
          description: Investment created successfully
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized
        '403':
          description: Insufficient funds

  /api/investments/{investmentId}:
    get:
      tags:
        - Investments
      summary: Get investment details
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: investmentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Investment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investment'
        '401':
          description: Unauthorized
        '404':
          description: Investment not found

    put:
      tags:
        - Investments
      summary: Update investment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: investmentId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [active, sold, pending]
      responses:
        '200':
          description: Investment updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Investment not found 